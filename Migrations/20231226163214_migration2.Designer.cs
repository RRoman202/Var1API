// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Var1API.Data;

#nullable disable

namespace Var1API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231226163214_migration2")]
    partial class migration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Help", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HelpBasis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<int>("Money")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Help", (string)null);
                });

            modelBuilder.Entity("Data.Models.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<DateTime>("MembershipEnterDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Memeber", (string)null);
                });

            modelBuilder.Entity("Data.Models.Travel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Days")
                        .HasColumnType("integer");

                    b.Property<bool>("IsHelpful")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Travel", (string)null);
                });

            modelBuilder.Entity("Data.Models.TravelApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Accepted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ApplicationIssuerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationIssuerId");

                    b.ToTable("TravelApplication", (string)null);
                });

            modelBuilder.Entity("Data.Models.Help", b =>
                {
                    b.HasOne("Data.Models.Member", null)
                        .WithMany("Helps")
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("Data.Models.Travel", b =>
                {
                    b.HasOne("Data.Models.Member", null)
                        .WithMany("Travels")
                        .HasForeignKey("MemberId");
                });

            modelBuilder.Entity("Data.Models.TravelApplication", b =>
                {
                    b.HasOne("Data.Models.Member", "ApplicationIssuer")
                        .WithMany()
                        .HasForeignKey("ApplicationIssuerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationIssuer");
                });

            modelBuilder.Entity("Data.Models.Member", b =>
                {
                    b.Navigation("Helps");

                    b.Navigation("Travels");
                });
#pragma warning restore 612, 618
        }
    }
}
